#!/bin/zsh
# Generated by Copilot
# Deploy script para dronescheduler com formata√ß√£o correta para zsh

# Definir vari√°veis de ambiente
export ACR_SERVER="acriaeeche65w.azurecr.io"
export DRONESCHEDULER_PRINCIPAL_CLIENT_ID="942b7a57-3411-4b7e-b060-d272080b06b9"
export CLUSTER_SUBNET_PREFIX="10.240.0.0/16"
export DRONESCHEDULER_KEYVAULT_URI="https://kv-schedule-iaeeche65w.vault.azure.net/"
export DRONESCHEDULER_DATABASE_NAME="packages"
export DRONESCHEDULER_COLLECTION_NAME="packages"
export DRONESCHEDULER_COSMOSDB_ENDPOINT_URL="https://cosmos-scheduler-iaeeche65w.documents.azure.com:443/"

echo "üöÄ Iniciando deploy do dronescheduler..."
echo "üì¶ ACR Server: $ACR_SERVER"
echo "üîë Client ID: $DRONESCHEDULER_PRINCIPAL_CLIENT_ID"
echo "üóÑÔ∏è Key Vault: $DRONESCHEDULER_KEYVAULT_URI"
echo "üåê CosmosDB: $DRONESCHEDULER_COSMOSDB_ENDPOINT_URL"

# Fazer package do chart
helm package ./charts/dronescheduler/ -u

# Deploy com escape correto para zsh
helm install dronescheduler-v0.1.0-dev dronescheduler-v0.1.0.tgz \
     --set image.tag=0.1.0 \
     --set image.repository=dronescheduler \
     --set dockerregistry=$ACR_SERVER \
     --set identity.clientid=$DRONESCHEDULER_PRINCIPAL_CLIENT_ID \
     --set identity.serviceAccountName=dronescheduler-sa-v0.1.0 \
     --set networkPolicy.egress.external.enabled=true \
     --set networkPolicy.egress.external.clusterSubnetPrefix=$CLUSTER_SUBNET_PREFIX \
     --set keyvault.uri=$DRONESCHEDULER_KEYVAULT_URI \
     --set cosmosdb.id=$DRONESCHEDULER_DATABASE_NAME \
     --set cosmosdb.collectionid=$DRONESCHEDULER_COLLECTION_NAME \
     --set cosmosdb.endpoint=$DRONESCHEDULER_COSMOSDB_ENDPOINT_URL \
     --set reason="Initial deployment" \
     --set envs.dev=true \
     --namespace backend-dev

echo "‚úÖ Deploy do dronescheduler conclu√≠do!"
