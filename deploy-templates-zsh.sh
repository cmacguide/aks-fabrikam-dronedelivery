#!/bin/zsh
# Generated by Copilot
# Template de deploy para microserviços com formatação correta para zsh

echo "🚀 Templates de deploy para os demais microserviços"
echo "===================================================="

echo ""
echo "📦 WORKFLOW SERVICE:"
echo "-------------------"
cat << 'EOF'
helm package ./charts/workflow/ -u && \
helm install workflow-v0.1.0-dev workflow-v0.1.0.tgz \
     --set image.tag=0.1.0 \
     --set image.repository=workflow \
     --set dockerregistry=acriaeeche65w.azurecr.io \
     --set identity.clientid=7d3dd0a6-4999-44dd-9522-7aa8262e67db \
     --set identity.serviceAccountName=workflow-sa-v0.1.0 \
     --set networkPolicy.egress.external.enabled=true \
     --set networkPolicy.egress.external.clusterSubnetPrefix="10.240.0.0/16" \
     --set keyvault.uri="https://kv-workflow-iaeeche65w.vault.azure.net/" \
     --set reason="Initial deployment" \
     --set envs.dev=true \
     --namespace backend-dev
EOF

echo ""
echo "📦 INGESTION SERVICE:"
echo "--------------------"
cat << 'EOF'
helm package ./charts/ingestion/ -u && \
helm install ingestion-v0.1.0-dev ingestion-v0.1.0.tgz \
     --set image.tag=0.1.0 \
     --set image.repository=ingestion \
     --set dockerregistry=acriaeeche65w.azurecr.io \
     --set identity.clientid=3d487a77-c460-4d4d-a38c-19392ce2544f \
     --set identity.serviceAccountName=ingestion-sa-v0.1.0 \
     --set networkPolicy.egress.external.enabled=true \
     --set networkPolicy.egress.external.clusterSubnetPrefix="10.240.0.0/16" \
     --set keyvault.uri="https://kv-ingest-iaeeche65w.vault.azure.net/" \
     --set reason="Initial deployment" \
     --set envs.dev=true \
     --namespace backend-dev
EOF

echo ""
echo "📦 PACKAGE SERVICE:"
echo "------------------"
cat << 'EOF'
helm package ./charts/package/ -u && \
helm install package-v0.1.0-dev package-v0.1.0.tgz \
     --set image.tag=0.1.0 \
     --set image.repository=package \
     --set dockerregistry=acriaeeche65w.azurecr.io \
     --set identity.clientid=a46641cb-08e1-4520-9748-8da5d1380dc8 \
     --set identity.serviceAccountName=package-sa-v0.1.0 \
     --set networkPolicy.egress.external.enabled=true \
     --set networkPolicy.egress.external.clusterSubnetPrefix="10.240.0.0/16" \
     --set keyvault.uri="https://kv-package-iaeeche65w.vault.azure.net/" \
     --set cosmosdb.id=packages \
     --set cosmosdb.collectionid=packages \
     --set cosmosdb.endpoint="https://cosmon-package-iaeeche65w.documents.azure.com:443/" \
     --set reason="Initial deployment" \
     --set envs.dev=true \
     --namespace backend-dev
EOF

echo ""
echo "✅ SERVIÇOS JÁ DEPLOYADOS:"
echo "==========================="
echo "✅ delivery (Running)"
echo "✅ dronescheduler (Running)"

echo ""
echo "📋 VERIFICAÇÃO DE STATUS:"
echo "========================"
echo "kubectl get pods -n backend-dev"
echo "kubectl get services -n backend-dev"
echo "kubectl logs -f deployment/<service-name> -n backend-dev"

echo ""
echo "🔧 TROUBLESHOOTING:"
echo "=================="
echo "# Verificar logs de um pod específico"
echo "kubectl logs <pod-name> -n backend-dev"
echo ""
echo "# Descrever pod com problemas"
echo "kubectl describe pod <pod-name> -n backend-dev"
echo ""
echo "# Port-forward para teste"
echo "kubectl port-forward -n backend-dev deployment/<service-name> 8080:8080"
