#!/bin/zsh
# Generated by Copilot
# Script simples para definir vari√°veis azd - otimizado para zsh
if [ -z "$ZSH_VERSION" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è Este script foi otimizado para Zsh, mas pode funcionar em outras shells.${NC}"
fi
if ! command -v azd &> /dev/null; then
    echo -e "${RED}‚ùå O Azure Developer CLI (azd) n√£o est√° instalado!${NC}"
    exit 1
fi
# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üöÄ Configurador de Vari√°veis AZD${NC}"
echo ""

# Mostra vari√°veis atuais
echo -e "${BLUE}üìã Vari√°veis atuais:${NC}"
azd env get-values
echo ""

#carrega um ambiente especifico (dev, hml,prd)
environmentName=$(azd env get-values | grep "environmentName=" | cut -d '=' -f2 | tr -d '"')
if [[ -z "$environmentName" ]]; then
    echo -e "${RED}‚ùå Vari√°vel environmentName n√£o definida no azd!${NC}"
    exit 1
fi
envFile="infra/preset/.env.$environmentName"
if [[ ! -f "$envFile" ]]; then
    echo -e "${RED}‚ùå Arquivo .env n√£o encontrado: $envFile${NC}"
    exit 1
else
    source "$envFile"
    echo -e "${GREEN}‚úÖ Arquivo .env carregado!${NC}"
fi

# Fun√ß√£o para definir vari√°veis
set_variable() {
    local name=$1
    local value=$2    
    if azd env set "$name" "$value"; then
        echo -e "${GREEN}‚úÖ $name definida com sucesso!${NC}"
    else
        echo -e "${RED}‚ùå Erro ao definir $name${NC}"
    fi
}

# Preset para vari√°veis do Fabrikam
setup_fabrikam_preset() {
    set_variable "location" $AZURE_LOCATION
    set_variable "geoRedundancyLocation" $GEO_REDUNDANCY_LOCATION 
    set_variable "azureTenantId" $AZURE_TENANT_ID
    set_variable "azureSubscriptionId" $AZURE_SUBSCRIPTION_ID
    set_variable "appName" $APP_NAME
    set_variable "domainName" $DOMAIN_NAME
    set_variable "kubernetesVersion" $KUBERNETES_VERSION
    set_variable "k8sRbacEntraProfileTenantId" $K8S_RBAC_ENTRA_PROFILE_TENANT_ID
    set_variable "k8sRbacEntraAdminGroupObjectID" $K8S_RBAC_ENTRA_ADMIN_GROUP_OBJECT_ID
    
    echo -e "${GREEN}‚úÖ Preset configurado!${NC}"
}

make_main_params() {
    local azdEnvValues
    azdEnvValues=$(azd env get-values --output json)
    local paramsFile="infra/main.parameters.json"

    # Garante que o diret√≥rio existe e √© grav√°vel
    mkdir -p infra

    # Gera o arquivo de par√¢metros
    echo '{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {' > "$paramsFile"

    echo "$azdEnvValues" | jq -r 'to_entries | .[] | "    \"" + .key + "\": {\n      \"value\": \"" + .value + "\"\n    },"' >> "$paramsFile"

    # Remove a √∫ltima v√≠rgula (compat√≠vel com Linux e Mac)
    if [[ "$(uname)" == "Darwin" ]]; then
        sed -i '' '$ s/,$//' "$paramsFile"
    else
        sed -i '$ s/,$//' "$paramsFile"
    fi

    echo '  }
}' >> "$paramsFile"

    echo -e "${GREEN}‚úÖ Arquivo main.parameters.json gerado com sucesso!${NC}"
}
# Menu principal
echo "Escolha uma op√ß√£o:"
echo "1. Definir vari√°vel manualmente"
echo "2. Aplicar preset Fabrikam"
echo "3. Gerar Arquivo de Par√¢metros Bicep"
echo "4. Sair"

read "opcao?Op√ß√£o (1-3): "

case $opcao in
    1)
        read "var_name?Nome da vari√°vel: "
        read "var_value?Valor da vari√°vel: "
        
        if [[ -n "$var_name" && -n "$var_value" ]]; then
            set_variable "$var_name" "$var_value"
        else
            echo -e "${YELLOW}‚ö†Ô∏è Nome e valor s√£o obrigat√≥rios!${NC}"
        fi
        ;;
    2)
        setup_fabrikam_preset
        ;;
    3)
        make_main_params
        ;;      
    4)
        echo -e "${GREEN}üëã Saindo...${NC}"
        exit 0
        ;;
    *)
        echo -e "${RED}‚ùå Op√ß√£o inv√°lida!${NC}"
        ;;
esac

echo ""
echo -e "${BLUE}üìã Vari√°veis ap√≥s altera√ß√£o:${NC}"
azd env get-values
