// Generated by Copilot
// Workload deployment module for Fabrikam Drone Delivery microservices
// This module creates placeholder resources for future Helm deployment via GitOps

// ============================================================================
// PARAMETERS
// ============================================================================

@description('Name of the AKS cluster')
param aksClusterName string

@description('Name of the Azure Container Registry')
param containerRegistryName string

// ============================================================================
// EXISTING RESOURCES
// ============================================================================

resource aksCluster 'Microsoft.ContainerService/managedClusters@2024-02-01' existing = {
  name: aksClusterName
}

// ============================================================================
// FLUX CONFIGURATION FOR WORKLOADS
// ============================================================================

// GitOps configuration for microservices deployment
resource workloadFluxConfiguration 'Microsoft.KubernetesConfiguration/fluxConfigurations@2022-03-01' = {
  scope: aksCluster
  name: 'workload-deployment'
  properties: {
    scope: 'namespace'
    namespace: 'backend-dev'
    sourceKind: 'GitRepository'
    gitRepository: {
      url: 'https://github.com/mspnp/aks-fabrikam-dronedelivery.git'
      timeoutInSeconds: 180
      syncIntervalInSeconds: 300
      repositoryRef: {
        branch: 'main'
        tag: null
        semver: null
        commit: null
      }
      sshKnownHosts: ''
      httpsUser: null
      httpsCACert: null
      localAuthRef: null
    }
    kustomizations: {
      workloads: {
        path: './deploy-workloads'
        dependsOn: []
        timeoutInSeconds: 300
        syncIntervalInSeconds: 300
        retryIntervalInSeconds: 300
        prune: true
        force: false
      }
    }
  }
}

// ============================================================================
// OUTPUTS
// ============================================================================

output fluxConfigurationName string = workloadFluxConfiguration.name
output namespace string = 'backend-dev'
output ingressHost string = 'dronedelivery.fabrikam.com'
output deploymentStatus string = 'Configured for GitOps deployment'

// Instructions for manual deployment if needed
output manualDeploymentInstructions object = {
  description: 'Use these commands to manually deploy workloads if GitOps is not working'
  commands: [
    'kubectl create namespace backend-dev'
    'helm upgrade --install delivery ./charts/delivery --namespace backend-dev --set image.repository=${containerRegistryName}.azurecr.io/shipping/delivery'
    'helm upgrade --install ingestion ./charts/ingestion --namespace backend-dev --set image.repository=${containerRegistryName}.azurecr.io/shipping/ingestion'
    'helm upgrade --install workflow ./charts/workflow --namespace backend-dev --set image.repository=${containerRegistryName}.azurecr.io/shipping/workflow'
    'helm upgrade --install dronescheduler ./charts/dronescheduler --namespace backend-dev --set image.repository=${containerRegistryName}.azurecr.io/shipping/dronescheduler'
    'helm upgrade --install package ./charts/package --namespace backend-dev --set image.repository=${containerRegistryName}.azurecr.io/shipping/package'
  ]
}
